server:
  port: 8080

eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: false
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${MOVIE_TICKETS_EUREKA_URL:http://localhost:8761/eureka/}

spring:
  cloud:
    gateway:
      default-filters:
      - TokenRelay=
      routes:
      - id: user-service
        uri: lb://user-service
        predicates:
          - Path=/user/**
      - id: movie-service
        uri: lb://movie-service
        predicates:
          - Path=/movie/**, /screen/**, /seat/**, /showtime/**, /theater/**
      - id: movie-media-service
        uri: lb://movie-media-service
        predicates:
          - Path=/media/**
      - id: shopping-service
        uri: lb://shopping-service
        predicates:
          - Path=/order/**, /cart/**, /stripe/webhook/**
  security:
    oauth2:
      client:
        registration:
          cognito:
            client-id: ${MOVIE_TICKETS_AUTH_CLIENT_ID}
            client-secret: ${MOVIE_TICKETS_AUTH_CLIENT_SECRET}
            redirect-uri: ${MOVIE_TICKETS_AUTH_REDIRECT_URL}
            authorization-grant-type: authorization_code
            scope:
              - openid
        provider:
          cognito:
            issuer-uri: ${MOVIE_TICKETS_AUTH_ISSUER_URI}
            jwk-set-uri: ${MOVIE_TICKETS_AUTH_JWK_SET_URI}
            user-name-attribute: cognito:username
  webflux:
    multipart:
      max-parts: 100
      max-disk-usage-per-part: 1MB
      max-headers-size: 1MB
      max-in-memory-size: 1MB

  codec:
    log-request-details: true

logging:
  level:
    org.springframework.web.reactive.function.client.ExchangeFunctions: TRACE
    org:
      springframework:
        http:
          codec:
            multipart: trace
        security: trace
    reactor.netty.http.client.HttpClient: DEBUG

